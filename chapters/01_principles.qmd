Principles of Accessible Web Content
====================================

Accessibility is an element of Web design that describes how a page can be used by people with disabilities such as blindness, deafness or color-blindness.

## Guidelines
I'm working to improve the accessibility of the R Basics workshop (with others to follow). This process begins by reviewing the workshop against the Word Wide Web Consortium (W3C)'s [Web Content Accesility Guidelines (WCAG)](https://www.w3.org/WAI/standards-guidelines/wcag/glance/). There are 13 guidelines under four categories, and each guideline has accompanying test(s). The W3C also suggests techniques to address the guidelines.

The guidelines are:

### Perceivable
- Provide [text alternatives](https://www.w3.org/WAI/WCAG22/quickref/#text-equiv) for non-text content.
- Provide [captions and other alternatives](https://www.w3.org/WAI/WCAG22/quickref/#media-equiv) for multimedia.
- Create content that can be [presented in different ways](https://www.w3.org/WAI/WCAG22/quickref/#content-structure-separation), including by assistive technologies, without losing meaning.
- Make it easier for users to [see and hear content](https://www.w3.org/WAI/WCAG22/quickref/#visual-audio-contrast).

### Operable
- Make all functionality available from a [keyboard](https://www.w3.org/WAI/WCAG22/quickref/#keyboard-operation).
- Give users [enough time](https://www.w3.org/WAI/WCAG22/quickref/#time-limits) to read and use content.
- Do not use content that causes [seizures](https://www.w3.org/WAI/WCAG22/quickref/#seizures-and-physical-reactions) or physical reactions.
- Help users [navigate and find content](https://www.w3.org/WAI/WCAG22/quickref/#navigation-mechanisms).
- Make it easier to use [inputs other than keyboard](https://www.w3.org/WAI/WCAG22/quickref/#input-modalities).

### Understandable
- Make text [readable and understandable](https://www.w3.org/WAI/WCAG22/quickref/#meaning).
- Make content appear and operate in [predictable](https://www.w3.org/WAI/WCAG22/quickref/#consistent-behavior) ways.
- Help users [avoid and correct mistakes](https://www.w3.org/WAI/WCAG22/quickref/#minimize-error).

### Robust
- Maximize [compatibility](https://www.w3.org/WAI/WCAG22/quickref/#ensure-compat) with current and future user tools.



## Resources
There are extensive resources available that describe how to make web content accesible. Unfortunately, most link to an absolute fire hose of information, much of which is aimed at developers of complicated web applications. Datalab's workshops are relatively simple web sites made up almost entirely of HTML and CSS with very little Javscript. That gives us a big head start in designing for accessibility but we still have to sort out what information is relevant. This web site will hopefully be all you need but the [University of California's guide to accessible web development](https://www.ucop.edu/electronic-accessibility/web-developers/index.html) is also a pretty good resource, written in mostly non-technical English. Since so much has been written on the subject, ChatGPT is quite good at answering specific questions like, "what is the difference between alt text and an ARIA label?" Finally, the [Content Creator Essentials](https://accessibility.huit.harvard.edu/content-creator-essentials) in the Harvard University Digital Accesibility Guide are great because they're written siply and directly, with examples provided.